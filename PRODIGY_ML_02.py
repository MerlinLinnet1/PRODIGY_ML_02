# -*- coding: utf-8 -*-
"""PRODIGY_ML_02.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1a83lwbyq_bKlSO5FXmgqHPAri_m8cbEP
"""

import pandas as pd
import matplotlib.pyplot as plt
from sklearn.cluster import KMeans
from sklearn.preprocessing import StandardScaler

file_path = '/content/Mall_Customers.csv'
customers_data = pd.read_csv(file_path)

print(customers_data.head())

features = customers_data[['Annual Income (k$)', 'Spending Score (1-100)']]

scaler = StandardScaler()
scaled_features = scaler.fit_transform(features)

inertia = []
for n in range(1, 11):
    kmeans = KMeans(n_clusters=n, random_state=42)
    kmeans.fit(scaled_features)
    inertia.append(kmeans.inertia_)

plt.figure(figsize=(10, 6))
plt.plot(range(1, 11), inertia, marker='o')
plt.title('Elbow Method for Optimal Number of Clusters')
plt.xlabel('Number of Clusters')
plt.ylabel('Inertia')
plt.show()

kmeans = KMeans(n_clusters=5, random_state=42)
customers_data['Cluster'] = kmeans.fit_predict(scaled_features)

plt.figure(figsize=(10, 6))
for cluster in range(5):
    cluster_data = customers_data[customers_data['Cluster'] == cluster]
    plt.scatter(cluster_data['Annual Income (k$)'], cluster_data['Spending Score (1-100)'], label=f'Cluster {cluster}')
plt.title('Customer Segments')
plt.xlabel('Annual Income (k$)')
plt.ylabel('Spending Score (1-100)')
plt.legend()
plt.show()

plt.figure(figsize=(10, 6))
customers_data['Cluster'].value_counts().plot(kind='bar')
plt.title('Number of Customers in Each Cluster')
plt.xlabel('Cluster')
plt.ylabel('Number of Customers')
plt.show()